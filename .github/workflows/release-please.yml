on:
  push:
    branches:
      - master
    paths:
      - 'src/*'
name: release-please
jobs:
  release-please:
    runs-on: ubuntu-latest
    env:
      FORCE_COLOR: 1
    steps:
      - uses: GoogleCloudPlatform/release-please-action@v2
        id: release
        with:
          release-type: php
          token: ${{ secrets.TOKEN }}
          package-name: phpunit-garbage-collector
      - uses: actions/github-script@v6
        id: vars
        with:
          script: |
            const response = await github.pulls.get({
              pull_number: ${{ steps.release.outputs.pr }},
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            core.info("\u001B[32mâœ”\u001B[39mBranch: \u001B[1;32m" + response.data.head.ref);
            core.setOutput("branch", response.data.head.ref);
        if: ${{ steps.release.outputs.pr && !steps.release.outputs.release_created }}
      - uses: actions/checkout@v3
        with:
          ref: ${{ steps.vars.outputs.branch }}
        if: ${{ steps.release.outputs.pr && !steps.release.outputs.release_created }}
      - if: ${{ steps.release.outputs.pr && !steps.release.outputs.release_created }}
        run: |
          VERSION=$(cat ./composer.json | jq -r '.version')
          RE='[^0-9]*\([0-9]*\)[.]\([0-9]*\)[.]\([0-9]*\)\([0-9A-Za-z-]*\)'
          MAJOR=`echo $VERSION | sed -e "s#$RE#\1#"`
          MINOR=`echo $VERSION | sed -e "s#$RE#\2#"`
          PATCH=`echo $VERSION | sed -e "s#$RE#\3#"`
          for f in src/*.php; do
            sed -i "/@version/c \ * @version   $VERSION" "$f"
          done
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
          git commit -am "build: Update versions in files"
          git push